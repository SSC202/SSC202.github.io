<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Git_1_Git的安装和配置</title>
    <link href="/2024/10/11/Git-1-Git%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <url>/2024/10/11/Git-1-Git%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="Git-1-Git的安装配置"><a href="#Git-1-Git的安装配置" class="headerlink" title="Git 1_Git的安装配置"></a>Git 1_Git的安装配置</h1><h2 id="1-Git-的安装"><a href="#1-Git-的安装" class="headerlink" title="1. Git 的安装"></a>1. Git 的安装</h2><h3 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">sudo</span> apt install libcurl4-gnutls-dev libexpat1-dev gettext \</span><br><span class="language-bash">  libz-dev libssl-dev</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">sudo</span> apt install git</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git --version</span><br></code></pre></td></tr></table></figure><h2 id="2-Git-的配置"><a href="#2-Git-的配置" class="headerlink" title="2. Git 的配置"></a>2. Git 的配置</h2><p>Git 提供了一个叫做 git config 的工具，专门用来配置或读取相应的工作环境变量。</p><p>在Ubuntu中，这些变量可以存放在以下三个不同的地方：</p><ul><li><code>/etc/gitconfig</code> 文件：系统中对所有用户都普遍适用的配置。若使用 <code>git config</code> 时用 <code>--system</code> 选项，读写的就是这个文件。</li><li><code>~/.gitconfig</code> 文件：用户目录下的配置文件只适用于该用户。若使用 <code>git config</code> 时用 <code>--global</code> 选项，读写的就是这个文件。</li><li>当前项目的 Git 目录中的配置文件（也就是工作目录中的 <code>.git/config</code> 文件）：这里的配置仅仅针对当前项目有效。每一个级别的配置都会覆盖上层的相同配置，所以 <code>.git/config</code> 里的配置会覆盖 <code>/etc/gitconfig</code> 中的同名变量。</li></ul><p>在Windows中，Git 会找寻用户主目录下的 <code>.gitconfig</code> 文件。主目录即 <code>$HOME</code> 变量指定的目录，一般都是 <code>C:\Documents and Settings\$USER</code>。</p><h3 id="用户信息设置"><a href="#用户信息设置" class="headerlink" title="用户信息设置"></a>用户信息设置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">git config --global user.name <span class="hljs-string">&quot;runoob&quot;</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git config --global user.email <span class="hljs-built_in">test</span>@runoob.com</span><br></code></pre></td></tr></table></figure><p>如果要在某个特定的项目中使用其他名字或者电邮，只要去掉 <code>--global</code> 选项重新配置即可，新的设定保存在当前项目的 <code>.git/config</code> 文件里。</p><h3 id="文本编辑器设置"><a href="#文本编辑器设置" class="headerlink" title="文本编辑器设置"></a>文本编辑器设置</h3><p>设置Git默认使用的文本编辑器, 一般可能会是 Vi 或者 Vim。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">git config --global core.editor emacs</span><br></code></pre></td></tr></table></figure><h3 id="查看配置信息"><a href="#查看配置信息" class="headerlink" title="查看配置信息"></a>查看配置信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">git config --list</span><br></code></pre></td></tr></table></figure><p>也可以在 <code>~/.gitconfig</code> 或 <code>/etc/gitconfig</code> 看到。</p>]]></content>
    
    
    <categories>
      
      <category>杂项</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Conda_简介</title>
    <link href="/2024/10/10/Conda-%E7%AE%80%E4%BB%8B/"/>
    <url>/2024/10/10/Conda-%E7%AE%80%E4%BB%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="Conda-简介"><a href="#Conda-简介" class="headerlink" title="Conda 简介"></a>Conda 简介</h1><p>conda 是一个开源的软件包管理系统和环境管理软件，用于安装多个版本的软件包及其依赖关系，并在它们之间轻松切换。conda 是为Python程序创建的，类似于 Linux、MacOS、Windows，也可以打包和分发其他软件。</p><h2 id="1-Conda-安装"><a href="#1-Conda-安装" class="headerlink" title="1. Conda 安装"></a>1. Conda 安装</h2><p>conda 分为 anaconda 和 miniconda，anaconda 是一个包含了许多常用库的集合版本，miniconda 是精简版本（只包含conda、pip、zlib、python 以及它们所需的包），剩余的通过 <code>conda install command</code> 命令自行安装即可；</p><blockquote><ul><li><a href="https://conda.io/miniconda.html">miniconda 官网</a></li><li><a href="https://www.anaconda.com/download">anaconda 官网</a></li></ul></blockquote><p>注意，安装时需要将conda添加到系统环境变量中（无论是Windows还是Ubuntu Bash&#x2F;Zsh）。</p><p>使用以下命令验证安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">conda --version</span><br></code></pre></td></tr></table></figure><blockquote><ul><li>conda 更新</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">conda update conda</span><br></code></pre></td></tr></table></figure></blockquote><h2 id="2-Conda-换源"><a href="#2-Conda-换源" class="headerlink" title="2. Conda 换源"></a>2. Conda 换源</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/<br>conda config --add channels https://mirrors.bfsu.edu.cn/anaconda/cloud/bioconda/<br>conda config --add channels https://mirrors.bfsu.edu.cn/anaconda/cloud/conda-forge/<br>conda config --add channels https://mirrors.bfsu.edu.cn/anaconda/pkgs/free/<br>conda config --add channels https://mirrors.bfsu.edu.cn/anaconda/pkgs/main/<br></code></pre></td></tr></table></figure><p>查看已经添加的源：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">conda config --get channels</span><br></code></pre></td></tr></table></figure><h2 id="3-环境管理"><a href="#3-环境管理" class="headerlink" title="3. 环境管理"></a>3. 环境管理</h2><h3 id="创建-删除环境"><a href="#创建-删除环境" class="headerlink" title="创建&#x2F;删除环境"></a>创建&#x2F;删除环境</h3><p>命令创建python版本为X.X、名字为 env_name 的虚拟环境。env_name文件可以在Anaconda安装目录 envs文件下找到。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">conda create -n [env_name] python=X.X</span><br></code></pre></td></tr></table></figure><p>输入以下命令查看当前存在的环境：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">conda <span class="hljs-built_in">env</span> list</span><br></code></pre></td></tr></table></figure><p>删除环境：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">conda remove -n [env_name] --all</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">conda <span class="hljs-built_in">env</span> remove -n [env_name]</span><br></code></pre></td></tr></table></figure><p>重命名环境：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">conda create -n [new_name] --<span class="hljs-built_in">clone</span> [old_name]</span><br></code></pre></td></tr></table></figure><p>进入&#x2F;退出环境：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">conda activate env_name  <span class="hljs-comment"># 进入环境</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">conda deactivate<span class="hljs-comment"># 退出环境</span></span><br></code></pre></td></tr></table></figure><h2 id="4-常见问题"><a href="#4-常见问题" class="headerlink" title="4. 常见问题"></a>4. 常见问题</h2><ol><li>提示 “无法加载文件C:\XXX\WindowsPowerShell\profile.ps1，因为在此系统上禁止运行脚本” 的错误</li></ol><blockquote><ol><li>以管理员身份运行PowerShell；</li><li>执行：<code>get-ExecutionPolicy</code>，回复Restricted，表示状态是禁止的；</li><li>执行：<code>set-ExecutionPolicy RemoteSigned</code>即可。</li></ol></blockquote>]]></content>
    
    
    <categories>
      
      <category>杂项</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂项</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Test</title>
    <link href="/2024/10/10/Test/"/>
    <url>/2024/10/10/Test/</url>
    
    <content type="html"><![CDATA[<p>仅用作测试</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
